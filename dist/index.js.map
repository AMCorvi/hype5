{"version":3,"sources":["index.js"],"names":["crawlData","type","filter","returnValue","data","Promise","resolve","reject","puts","err","stdout","stderr","then","top","x","res","json","limit","i","catch","console","log","error","latest","remix","remixes","options","find","val","SyntaxError","output","getData"],"mappings":"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","file":"index.js","sourcesContent":["import \"babel-polyfill\";\nimport fetch from \"node-fetch\";\nimport {exec} from \"child_process\";\n\nlet crawlData = async function(type, filter) {\n\t// Variable to assign return data\n\tlet returnValue;\n\n\t// Handle child process call asyncronously\n\tlet data = new Promise(function(resolve, reject) {\n\t\t// Call back function for 'exec' to handle respone from exec() call\n\t\tfunction puts(err, stdout, stderr) {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else if (stderr) {\n\t\t\t\treject(stderr);\n\t\t\t} else {\n\t\t\t\tresolve(stdout);\n\t\t\t}\n\t\t}\n\n\t\texec(\n\t\t\t`casperjs --verbose ./dist/crawler.js --hypeType=${type} --hypeFilter=${filter}`,\n\t\t\tputs,\n\t\t);\n\t});\n\n\t// pause for data and assign to returnValue variable\n\tawait data.then(data => (returnValue = data));\n\n\treturn returnValue;\n};\n\nexport let top = limit => {\n\tlet x = fetch(\"http://hypem.com/playlist/popular/3day/json/1/data.js\")\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tif (limit && limit < 20) {\n\t\t\t\tlet res = {};\n\t\t\t\tfor (var i = 0; i <= limit - 1; i += 1) {\n\t\t\t\t\tres[`${i}`] = json[`${i}`];\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\treturn json;\n\t\t})\n\t\t.catch(error => console.log(error));\n\n\treturn x;\n};\n\nexport let latest = limit => {\n\tlet x = fetch(\"http://hypem.com/playlist/latest/all/json/1/data.json\")\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tif (limit && limit < 20) {\n\t\t\t\tlet res = {};\n\t\t\t\tfor (var i = 0; i <= limit - 1; i += 1) {\n\t\t\t\t\tres[`${i}`] = json[`${i}`];\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\treturn json;\n\t\t})\n\t\t.catch(error => console.log(error));\n\n\treturn x;\n};\n\nexport let remix = limit => {\n\tlet x = fetch(\"http://hypem.com/playlist/popular/remix/json/1/data.json\")\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tif (limit && limit < 20) {\n\t\t\t\tlet res = {};\n\t\t\t\tfor (var i = 0; i <= limit - 1; i += 1) {\n\t\t\t\t\tres[`${i}`] = json[`${i}`];\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\treturn json;\n\t\t})\n\t\t.catch(error => console.log(error));\n\n\treturn x;\n};\n\nexport let remixes = async function(type) {\n\tconst options = [\"popular\", \"latest\"];\n\n\t// Compare filter parameter with list of possible valid filters\n\ttry {\n\t\tif (!options.find(val => val === type)) {\n\t\t\tthrow new SyntaxError(\n\t\t\t\t` \\n\\n \\t Call of function 'remixes' made with invalid arg ${type}.\\n\\t Insert valid filter argument. \\n\\t e.g. ${options}\\n`,\n\t\t\t\t\"index.js\",\n\t\t\t\t89,\n\t\t\t);\n\t\t}\n\t} catch (e) {\n\t\tthrow e;\n\t}\n\n\tlet output;\n\tlet getData = await function() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet x = crawlData(type, \"remix\");\n\t\t\t\tresolve(x);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t};\n\n\tawait getData()\n\t\t.then(data => {\n\t\t\toutput = data;\n\t\t})\n\t\t.catch(err => {\n\t\t\tthrow err;\n\t\t});\n\n\treturn output;\n};\n"]}